<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-config.dtd">

<!--configuration核心配置文件-->
<configuration>

    <properties resource="jdbc.properties" />
    
    <settings>
        <!-- 开启了 mybatis的日志输出，选择使用system进行控制台输出 -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!-- 开启驼峰式自动映射 数据库 a_column -> aColumn -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- resultMap 标签 有没有嵌套都会自动帮我们映射result标签属性和列 -->
        <setting name="autoMappingBehavior" value="FULL"/>
    </settings>

    <!-- 定义自己类的别名 -->
    <typeAliases>
        <!-- 单独定义 -->
        <!--<typeAlias type="com.chy.pojo.Employee" alias="ergouzi"></typeAlias>-->
        <!-- 批量将包下的类给与别名，别名就是类的首字母小写！ -->
        <package name="com.chy.pojo"/>
    </typeAliases>

    <!-- mybatis内部配置插件，可以进行sql语句拦截了 -->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 插件语法对应的数据库类型 -->
            <property name="helperDialect" value="mysql"/>
        </plugin>
    </plugins>

    <environments default="development">
        <!-- environment 表示配置mybatis的一个具体的环境 -->
        <environment id="development">
            <!-- JDBC 自动开启事务，需要自己提交事务！ | MANAGED 不会自动开启事务！ -->
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!--设置连接数据库的驱动-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--设置连接数据库的连接地址-->
                <property name="url" value="${jdbc.url}"/>
                <!--设置连接数据库的用户名-->
                <property name="username" value="${jdbc.username}"/>
                <!--设置连接数据库的密码-->
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--引入映射文件-->
    <mappers>
        <!--<mapper resource="mappers/EmployeeMapper.xml"/>-->
        <!--
            批量mapper指定
                1、要求Mapper xml文件和mapper接口的命名必须相同
                2、最终打包后的位置要一致 都是指定的包地址下！
                    方案1：xml文件也加入到接口所在的包即可
                    方案2：resource文件夹创建对应的文件夹结构即可
                注意：resource下直接创建多层文件夹 使用/分割
        -->
        <package name="com.chy.mapper"/>
    </mappers>
</configuration>